apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: "kotlin-kapt"

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.targetSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.meetferrytan.kotlinmvptemplate"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        multiDexEnabled true

        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // used by Room, to test migrations
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    // used by Room, to test migrations
    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    /*
    buildTypes.each {
        it.buildConfigField "String", "A_GLOBAL_VARIABLE_ACROSS_FLAVORS", '"some_value"'
        it.buildConfigField "String", "A_GRADLE_PROPERTIES_VALUE", GradleVariable
    }
    */
    flavorDimensions "mode"
    productFlavors {
        develop {
            applicationIdSuffix ".dev"
            buildConfigField "String", "BASE_URL", '"https://api.github.com/"'
            dimension "mode"
        }
        staging {
            applicationIdSuffix ".sta"
            buildConfigField "String", "BASE_URL", '"https://api.github.com/"'
            dimension "mode"
        }
        prod {
            buildConfigField "String", "BASE_URL", '"https://api.github.com/"'
            dimension "mode"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Android Support
    implementation "androidx.core:core:$rootProject.xcoreVersion"
    implementation("androidx.appcompat:appcompat:$rootProject.appCompatVersion") {
        transitive = false
    }
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerviewVersion"
    implementation "androidx.browser:browser:$rootProject.browserVersion"
    implementation "androidx.cardview:cardview:$rootProject.cardviewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.multidex:multidex:$rootProject.multidexVersion"

    // Lifecycle arch
    implementation "androidx.arch.core:core-runtime:$rootProject.archCoreVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$rootProject.lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"

    // Room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxKotlinVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation("com.github.bumptech.glide:okhttp3-integration:$rootProject.glideVersion") {
        exclude group: 'glide-parent'
    }

    // Gson
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Skeleton Placeholder View
    implementation "com.github.ferrytan:skeletonplaceholderview:$rootProject.skeletonPlaceholderViewVersion"

    // Shimmer Layout
    implementation "com.facebook.shimmer:shimmer:$rootProject.facebookShimmerVersion"

    // Local Unit Test
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"

    // Local Test
    androidTestImplementation "androidx.test:core:$rootProject.testCoreVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.testRulesVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.testJUnitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"

    // Developer tools
    implementation "com.facebook.stetho:stetho:$rootProject.stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$rootProject.stethoVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.leakcanaryVersion"

    // Other Dependencies
    compileOnly "org.glassfish:javax.annotation:$rootProject.javaxAnnotationVersion"
}